rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Posts images - allow all authenticated users to read, owners to write
    match /posts/{userId}/{imageId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Direct Messages images - allow conversation participants
    match /directMessages/{dmId}/{imageId} {
      allow read, write: if request.auth != null && 
                        (dmId.split('_')[0] == request.auth.uid || 
                         dmId.split('_')[1] == request.auth.uid);
    }
    
    // Groups images - allow all authenticated users (simplified for development)
    match /groups/{groupId}/images/{imageId} {
      allow read, write: if request.auth != null;
    }
    
    // User profile images
    match /users/{userId}/profile/{imageId} {
      allow read: if request.auth != null;
      allow write, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Temporary uploads
    match /temp/{userId}/{imageId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // General fallback - allow all authenticated users
    match /{allPaths=**} {
      allow read, write: if request.auth != null;
    }
  }
}